name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test:
    strategy:
      matrix:
        platform: [ "ubuntu-latest", "macos-latest", "windows-latest" ]
        build-type: [ "Release", "Debug" ]
        standard: [ "", "-DTRIESTE_USE_CXX17=ON" ]
        compiler: [ "", "clang" ]
        
        include:
        - platform: "ubuntu-latest"
          compiler: "clang"
          cmake_options: "-DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_FLAGS=-stdlib=libc++"
          generator: "-G Ninja"
          dependencies: "sudo apt install ninja-build"
    
        exclude:
        # Mac is already using clang.
        - platform: "macos-latest"
          compiler: "clang"
        # Windows is only using MSVC.
        - platform: "windows-latest"
          compiler: "clang"

      # Don't abort runners if a single one fails
      fail-fast: false

    runs-on: ${{matrix.platform}}

    steps:
    - uses: actions/checkout@v3
    
    - name: Install build dependencies
      run: ${{ matrix.dependencies }}
      
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build-type}} ${{matrix.generator}} ${{matrix.standard}} ${{matrix.cmake_options}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.build-type}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{matrix.build-type}} --output-on-failure --timeout 400 --interactive-debug-mode 0 
